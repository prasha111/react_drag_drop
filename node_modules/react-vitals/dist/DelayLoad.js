import React, { useEffect, useRef, useState } from 'react';
export function DelayLoad({ timeout = 3000, children }) {
    const mountedRef = useRef(true);
    const [active, setActive] = useState(false);
    useEffect(() => {
        mountedRef.current = true;
        // when web vitals is not available, use a long timer for fallback
        const timer = window.setTimeout(() => {
            console.log(timeout);
            setActive(true);
        }, timeout);
        return () => {
            mountedRef.current = false;
            window.clearTimeout(timer);
        };
    }, []);
    if (!active)
        return null;
    return React.createElement(React.Fragment, null, children);
}
